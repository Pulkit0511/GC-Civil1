app asd {
  wasp: {
    version: "^0.13.0"
  },
  title: "IIT BBS Transport",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route TransportSchedule { path: "/schedule", to: TransportSchedule }
page TransportSchedule {
  component: import TransportSchedule from "@src/pages/TransportSchedule.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

entity User {=psl
    id              Int              @id @default(autoincrement())
    role            String           @default("STUDENT")
    facultyPayments FacultyPayment[]
    bookings        Booking[]
psl=}

entity Schedule {=psl
    id            Int      @id @default(autoincrement())
    startTime     DateTime
    endTime       DateTime
    startLocation String
    endLocation   String
psl=}

entity FacultyPayment {=psl
    id     Int     @id @default(autoincrement())
    amount Float
    isPaid Boolean @default(false)
    user   User    @relation(fields: [userId], references: [id])
    userId Int
psl=}

entity Booking {=psl
    id         Int  @id @default(autoincrement())
    seatNumber Int
    user       User @relation(fields: [userId], references: [id])
    userId     Int
psl=}

action createFacultyPayment {
  fn: import { createFacultyPayment } from "@src/actions.js",
  entities: [User, FacultyPayment]
}

action updateFacultyPayment {
  fn: import { updateFacultyPayment } from "@src/actions.js",
  entities: [User, FacultyPayment]
}

action createBooking {
  fn: import { createBooking } from "@src/actions.js",
  entities: [User, Booking]
}

query getSchedule {
  fn: import { getSchedule } from "@src/queries.js",
  entities: [Schedule]
}

query getFacultyPayments {
  fn: import { getFacultyPayments } from "@src/queries.js",
  entities: [User, FacultyPayment]
}

query getBookings {
  fn: import { getBookings } from "@src/queries.js",
  entities: [User, Booking]
}

route ScheduleRoute { path: "/schedule", to: SchedulePage }
page SchedulePage {
  component: import SchedulePage from "@src/pages/Schedule.jsx",
  authRequired: true
}

route FacultyPaymentsRoute { path: "/faculty-payments", to: FacultyPaymentsPage }
page FacultyPaymentsPage {
  component: import FacultyPaymentsPage from "@src/pages/FacultyPayments.jsx",
  authRequired: true
}

route BookingsRoute { path: "/bookings", to: BookingsPage }
page BookingsPage {
  component: import BookingsPage from "@src/pages/Bookings.jsx",
  authRequired: true
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import HomePage from "@src/pages/Home.jsx",
  authRequired: false
}